/* Autogenerated file. Do not edit manually. */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PLUMEGateway, PLUMEGatewayInterface } from '../PLUMEGateway';

const _abi = [
  {
    type: 'constructor',
    inputs: [
      {
        name: '_wplume',
        type: 'address',
        internalType: 'address',
      },
      {
        name: '_stakingContract',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'receive',
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'depositPLUME',
    inputs: [
      {
        name: 'onBehalfOf',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: 'shares',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'redeemPLUME',
    inputs: [
      {
        name: 'requestIndex',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'onBehalfOf',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'requestRedeemPLUME',
    inputs: [
      {
        name: 'shares',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'onBehalfOf',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'minAssets',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'error',
    name: 'InvalidValue',
    inputs: [],
  },
  {
    type: 'error',
    name: 'ReentrancyGuardReentrantCall',
    inputs: [],
  },
] as const;

const _bytecode =
  '0x60c060405234801561000f575f80fd5b506040516107cd3803806107cd83398101604081905261002e916100ce565b6001600160a01b03828116608081905290821660a081905260405163095ea7b360e01b815260048101919091525f19602482015263095ea7b3906044016020604051808303815f875af1158015610087573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100ab91906100ff565b505050610125565b80516001600160a01b03811681146100c9575f80fd5b919050565b5f80604083850312156100df575f80fd5b6100e8836100b3565b91506100f6602084016100b3565b90509250929050565b5f6020828403121561010f575f80fd5b8151801515811461011e575f80fd5b9392505050565b60805160a05161066c6101615f395f818160d30152818161030a015281816103bc015261045a01525f8181610156015261027a015261066c5ff3fe608060405260043610610036575f3560e01c8063a97a793314610041578063b0d59ed714610072578063e6b79c1d14610085575f80fd5b3661003d57005b5f80fd5b34801561004c575f80fd5b5061006061005b36600461058b565b6100a4565b60405190815260200160405180910390f35b6100606100803660046105b5565b61024f565b348015610090575f80fd5b5061006061009f3660046105ce565b610387565b5f6100ad6104d5565b604051633def417960e11b8152600481018490526001600160a01b0383811660248301527f00000000000000000000000000000000000000000000000000000000000000001690637bde82f2906044016020604051808303815f875af1158015610119573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061013d9190610600565b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024015f604051808303815f87803b15801561019f575f80fd5b505af11580156101b1573d5f803e3d5ffd5b50506040515f925033915083908381818185875af1925050503d805f81146101f4576040519150601f19603f3d011682016040523d82523d5f602084013e6101f9565b606091505b50509050806102405760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640160405180910390fd5b50610249610544565b92915050565b5f6102586104d5565b345f0361027857604051632a9ffab760e21b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b1580156102d1575f80fd5b505af11580156102e3573d5f803e3d5ffd5b5050604051636e553f6560e01b81523460048201526001600160a01b0386811660248301527f0000000000000000000000000000000000000000000000000000000000000000169350636e553f65925060440190506020604051808303815f875af1158015610354573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103789190610600565b9050610382610544565b919050565b5f6103906104d5565b6040516323b872dd60e01b81526001600160a01b038481166004830152306024830152604482018690527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303815f875af1158015610402573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104269190610617565b50604051638181e16160e01b8152600481018590523060248201526001600160a01b038481166044830152606482018490527f00000000000000000000000000000000000000000000000000000000000000001690638181e161906084016020604051808303815f875af11580156104a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c49190610600565b90506104ce610544565b9392505050565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005c1561051557604051633ee5aeb560e01b815260040160405180910390fd5b61054260017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005b9061056e565b565b6105425f7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0061053c565b80825d5050565b80356001600160a01b0381168114610382575f80fd5b5f806040838503121561059c575f80fd5b823591506105ac60208401610575565b90509250929050565b5f602082840312156105c5575f80fd5b6104ce82610575565b5f805f606084860312156105e0575f80fd5b833592506105f060208501610575565b9150604084013590509250925092565b5f60208284031215610610575f80fd5b5051919050565b5f60208284031215610627575f80fd5b815180151581146104ce575f80fdfea26469706673582212200b8bece8ca39402c9eba51c41a43fd7838a45affe9cf49a3a830212ccc4523ac64736f6c63430008190033';

type PLUMEGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PLUMEGatewayConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PLUMEGateway__factory extends ContractFactory {
  constructor(...args: PLUMEGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wplume: string,
    _stakingContract: string,
    overrides?: Overrides & { from?: string },
  ): Promise<PLUMEGateway> {
    return super.deploy(
      _wplume,
      _stakingContract,
      overrides || {},
    ) as Promise<PLUMEGateway>;
  }
  override getDeployTransaction(
    _wplume: string,
    _stakingContract: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wplume,
      _stakingContract,
      overrides || {},
    );
  }
  override attach(address: string): PLUMEGateway {
    return super.attach(address) as PLUMEGateway;
  }
  override connect(signer: Signer): PLUMEGateway__factory {
    return super.connect(signer) as PLUMEGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PLUMEGatewayInterface {
    return new utils.Interface(_abi) as PLUMEGatewayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): PLUMEGateway {
    return new Contract(address, _abi, signerOrProvider) as PLUMEGateway;
  }
}
