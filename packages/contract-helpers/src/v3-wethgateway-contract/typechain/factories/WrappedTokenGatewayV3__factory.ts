/* Autogenerated file. Do not edit manually. */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  WrappedTokenGatewayV3,
  WrappedTokenGatewayV3Interface,
} from '../WrappedTokenGatewayV3';

const _abi = [
  {
    type: 'constructor',
    inputs: [
      {
        name: 'plume',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'owner',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'pool',
        type: 'address',
        internalType: 'contract IPool',
      },
      {
        name: 'loop',
        type: 'address',
        internalType: 'contract ILooping',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'fallback',
    stateMutability: 'payable',
  },
  {
    type: 'receive',
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'borrowPLUME',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'referralCode',
        type: 'uint16',
        internalType: 'uint16',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'depositPLUME',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'onBehalfOf',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'referralCode',
        type: 'uint16',
        internalType: 'uint16',
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'emergencyPlumeTransfer',
    inputs: [
      {
        name: 'to',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'emergencyTokenTransfer',
    inputs: [
      {
        name: 'token',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'to',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'getWPLUMEAddress',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'loopEntryPLUMEMultiSwap',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopEntryPLUMEMultiSwapParams',
        components: [
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'borrowToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'minAmountSupplied',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'path',
            type: 'bytes',
            internalType: 'bytes',
          },
        ],
      },
    ],
    outputs: [
      {
        name: 'loopData',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopData',
        components: [
          {
            name: 'supplyAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'borrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'leftoverBorrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'loopEntryPLUMESingleAsset',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopEntryPLUMESingleAssetParams',
        components: [
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
        ],
      },
    ],
    outputs: [
      {
        name: 'loopData',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopData',
        components: [
          {
            name: 'supplyAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'borrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'leftoverBorrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'loopEntryPLUMESingleSwap',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopEntryPLUMESingleSwapParams',
        components: [
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'isSupplyTokenA',
            type: 'bool',
            internalType: 'bool',
          },
          {
            name: 'borrowToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'maverickPool',
            type: 'address',
            internalType: 'contract IMaverickV2Pool',
          },
          {
            name: 'minAmountSupplied',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    outputs: [
      {
        name: 'loopData',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopData',
        components: [
          {
            name: 'supplyAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'borrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'leftoverBorrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'loopExitPLUMEMultiSwap',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopExitPLUMEMultiSwapParams',
        components: [
          {
            name: 'supplyToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'minAmountSupplied',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'initialAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'path',
            type: 'bytes',
            internalType: 'bytes',
          },
        ],
      },
    ],
    outputs: [
      {
        name: 'loopData',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopData',
        components: [
          {
            name: 'supplyAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'borrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'leftoverBorrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'loopExitPLUMESingleAsset',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopExitPLUMESingleAssetParams',
        components: [
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'initialAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    outputs: [
      {
        name: 'loopData',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopData',
        components: [
          {
            name: 'supplyAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'borrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'leftoverBorrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'loopExitPLUMESingleSwap',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopExitPLUMESingleSwapParams',
        components: [
          {
            name: 'supplyToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'isSupplyTokenA',
            type: 'bool',
            internalType: 'bool',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'maverickPool',
            type: 'address',
            internalType: 'contract IMaverickV2Pool',
          },
          {
            name: 'minAmountSupplied',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'initialAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    outputs: [
      {
        name: 'loopData',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopData',
        components: [
          {
            name: 'supplyAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'borrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'leftoverBorrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'loopPLUMESingleAsset',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopPLUMESingleAssetParams',
        components: [
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
        ],
      },
    ],
    outputs: [
      {
        name: 'loopData',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopData',
        components: [
          {
            name: 'supplyAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'borrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'leftoverBorrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'repayPLUME',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'onBehalfOf',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [
      {
        name: 'newOwner',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'withdrawPLUME',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'to',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'withdrawPLUMEWithPermit',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'to',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'deadline',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'permitV',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: 'permitR',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 'permitS',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      {
        name: 'previousOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'newOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'error',
    name: 'TransferPLUMEFailed',
    inputs: [],
  },
] as const;

const _bytecode =
  '0x60e060405234801561000f575f80fd5b5060405161302038038061302083398101604081905261002e91610288565b5f80546001600160a01b031916339081178255604051909182915f80516020613000833981519152908290a3506001600160a01b0380851660805282811660a052811660c05261007d83610168565b60405163095ea7b360e01b81526001600160a01b0383811660048301525f19602483015285169063095ea7b3906044016020604051808303815f875af11580156100c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100ed91906102e4565b5060405163095ea7b360e01b81526001600160a01b0382811660048301525f19602483015285169063095ea7b3906044016020604051808303815f875af115801561013a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061015e91906102e4565b505050505061030a565b5f546001600160a01b031633146101c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661022b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101bd565b5f80546040516001600160a01b03808516939216915f8051602061300083398151915291a35f80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114610285575f80fd5b50565b5f805f806080858703121561029b575f80fd5b84516102a681610271565b60208601519094506102b781610271565b60408601519093506102c881610271565b60608601519092506102d981610271565b939692955090935050565b5f602082840312156102f4575f80fd5b81518015158114610303575f80fd5b9392505050565b60805160a05160c051612b9161046f5f395f818161047e0152818161098a01528181610a2901528181610abb01528181610d7101528181610e1001528181610ea2015281816113d2015281816115c5015281816118c90152611aff01525f81816106800152818161082b0152818161101f01528181611249015281816117d601528181611c3d01528181611d540152611f5e01525f818161011c015281816103760152818161040e015281816104b901528181610656015281816107f6015281816108ac01528181610b5601528181610c4201528181610f0801528181610ff501528181611214015281816112ca015281816113620152818161140c015281816114fb01528181611555015281816115ff0152818161171401528181611796015281816118590152818161190401528181611ad101528181611b3901528181611bee01528181611ca801528181611d2a01528181611e9d0152611f170152612b915ff3fe60806040526004361061010c575f3560e01c80638da5cb5b11610094578063b897132511610063578063b897132514610349578063bdbfc22614610368578063cc720c1f1461039a578063e6906a1a146103ad578063f2fde38b146103cc57610186565b80638da5cb5b146102c8578063a0844be5146102f8578063a3d5b2551461030b578063b834bf3c1461032a57610186565b806343a0d7aa116100db57806343a0d7aa1461025c5780634da896df1461027b5780636e74c00d1461028e578063715018a6146102a15780637eee8a22146102b557610186565b8063037c1d6b146101c557806312188c1d146101ff5780631a62fedc1461021e5780633b5825761461023d57610186565b3661018657336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101845760405162461bcd60e51b8152602060048201526013602482015272149958d95a5d99481b9bdd08185b1b1bddd959606a1b60448201526064015b60405180910390fd5b005b60405162461bcd60e51b815260206004820152601460248201527311985b1b189858dac81b9bdd08185b1b1bddd95960621b604482015260640161017b565b6101d86101d3366004612385565b6103eb565b60408051825181526020808401519082015291810151908201526060015b60405180910390f35b34801561020a575f80fd5b506101846102193660046123da565b61063f565b348015610229575f80fd5b506101d8610238366004612419565b61091d565b348015610248575f80fd5b506101d861025736600461243a565b610d15565b348015610267575f80fd5b50610184610276366004612474565b610fde565b6101d86102893660046124f5565b61133f565b6101d861029c3660046124f5565b611532565b3480156102ac575f80fd5b506101846116a1565b6101846102c336600461251e565b611712565b3480156102d3575f80fd5b505f546001600160a01b03165b6040516001600160a01b0390911681526020016101f6565b6101d861030636600461255b565b611836565b348015610316575f80fd5b50610184610325366004612575565b611a61565b348015610335575f80fd5b506101d86103443660046125b3565b611aa3565b348015610354575f80fd5b506101846103633660046125c3565b611bdf565b348015610373575f80fd5b507f00000000000000000000000000000000000000000000000000000000000000006102e0565b6101846103a83660046123da565b611d13565b3480156103b8575f80fd5b506101846103c73660046125f7565b611fee565b3480156103d7575f80fd5b506101846103e6366004612621565b612025565b61040c60405180606001604052805f81526020015f81526020015f81525090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b158015610465575f80fd5b505af1158015610477573d5f803e3d5ffd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d5b6e4906040518061010001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001855f0160208101906104f8919061263c565b61ffff1681526020016105116060870160408801612621565b6001600160a01b0316815260200161052f608087016060880161263c565b61ffff16815260200185602001602081019061054b9190612621565b6001600160a01b031681523460208201526080860135604082015260600161057660a0870187612657565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050509152506040516001600160e01b031960e084901b1681526105cc91906004016126cf565b6060604051808303815f875af11580156105e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061060c9190612797565b905061063a33826040015184604001602081019061062a9190612621565b6001600160a01b0316919061210c565b919050565b6040516335ea6a7560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f917f0000000000000000000000000000000000000000000000000000000000000000909116906335ea6a75906024016101e060405180830381865afa1580156106c8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106ec9190612892565b61010001516040516370a0823160e01b81523360048201529091505f906001600160a01b038316906370a0823190602401602060405180830381865afa158015610738573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075c91906129b3565b9050836001810161076a5750805b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038416906323b872dd906064016020604051808303815f875af11580156107ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107de91906129d7565b50604051631a4ca37b60e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390523060448301527f000000000000000000000000000000000000000000000000000000000000000016906369328dec906064016020604051808303815f875af1158015610871573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061089591906129b3565b50604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024015f604051808303815f87803b1580156108f5575f80fd5b505af1158015610907573d5f803e3d5ffd5b505050506109158482612194565b505050505050565b61093e60405180606001604052805f81526020015f81526020015f81525090565b610966333060e08501356109556020870187612621565b6001600160a01b0316929190612245565b6109736020830183612621565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f6024830152919091169063095ea7b3906044016020604051808303815f875af11580156109e0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a0491906129d7565b50610a126020830183612621565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f196024830152919091169063095ea7b3906044016020604051808303815f875af1158015610a80573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aa491906129d7565b506040805161012081019091526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063da5298419080610af06020870187612621565b6001600160a01b03168152602001856020016020810190610b11919061263c565b61ffff168152602001610b2a6060870160408801612621565b6001600160a01b03168152602001610b4860808701606088016129f2565b151581526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166020820152604001610b8e60a087016080880161263c565b61ffff168152602001610ba760c0870160a08801612621565b6001600160a01b031681526020018560c0013581526020018560e001358152506040518263ffffffff1660e01b8152600401610be39190612a0d565b6060604051808303815f875af1158015610bff573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c239190612797565b6040808201519051632e1a7d4d60e01b81529192506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691632e1a7d4d91610c799160040190815260200190565b5f604051808303815f87803b158015610c90575f80fd5b505af1158015610ca2573d5f803e3d5ffd5b5050505060408181015190515f9133918381818185875af1925050503d805f8114610ce8576040519150601f19603f3d011682016040523d82523d5f602084013e610ced565b606091505b5050905080610d0f576040516305f88b0960e01b815260040160405180910390fd5b50919050565b610d3660405180606001604052805f81526020015f81526020015f81525090565b610d4d333060a08501356109556020870187612621565b610d5a6020830183612621565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f6024830152919091169063095ea7b3906044016020604051808303815f875af1158015610dc7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610deb91906129d7565b50610df96020830183612621565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f196024830152919091169063095ea7b3906044016020604051808303815f875af1158015610e67573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e8b91906129d7565b506040805161010081019091526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d5b6e4909080610ed76020870187612621565b6001600160a01b03168152602001856020016020810190610ef8919061263c565b61ffff1681526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166020820152604001610f40608087016060880161263c565b61ffff168152602001610f596060870160408801612621565b6001600160a01b0316815260a0860135602082015260808601356040820152606001610f8860c0870187612657565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050509152506040516001600160e01b031960e084901b168152610be391906004016126cf565b6040516335ea6a7560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f917f0000000000000000000000000000000000000000000000000000000000000000909116906335ea6a75906024016101e060405180830381865afa158015611067573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061108b9190612892565b61010001516040516370a0823160e01b81523360048201529091505f906001600160a01b038316906370a0823190602401602060405180830381865afa1580156110d7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110fb91906129b3565b905087600181016111095750805b60405163d505accf60e01b8152336004820152306024820152604481018a90526064810188905260ff8716608482015260a4810186905260c481018590526001600160a01b0384169063d505accf9060e4015f604051808303815f87803b158015611172575f80fd5b505af1158015611184573d5f803e3d5ffd5b50506040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03861692506323b872dd91506064016020604051808303815f875af11580156111d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111fc91906129d7565b50604051631a4ca37b60e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390523060448301527f000000000000000000000000000000000000000000000000000000000000000016906369328dec906064016020604051808303815f875af115801561128f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112b391906129b3565b50604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024015f604051808303815f87803b158015611313575f80fd5b505af1158015611325573d5f803e3d5ffd5b505050506113338882612194565b50505050505050505050565b61136060405180606001604052805f81526020015f81526020015f81525090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b1580156113b9575f80fd5b505af11580156113cb573d5f803e3d5ffd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637b809dee6040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001855f01602081019061144b919061263c565b61ffff1681526020018560200160208101906114679190612621565b6001600160a01b03168152602001611485606087016040880161263c565b61ffff168152602001348152506040518263ffffffff1660e01b81526004016114ae9190612ac5565b6060604051808303815f875af11580156114ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114ee9190612797565b905061063a3382604001517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661210c9092919063ffffffff16565b61155360405180606001604052805f81526020015f81526020015f81525090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b1580156115ac575f80fd5b505af11580156115be573d5f803e3d5ffd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637b809dee6040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001855f01602081019061163e919061263c565b61ffff16815260200185602001602081019061165a9190612621565b6001600160a01b03168152602001611678606087016040880161263c565b61ffff168152602001348152506040518263ffffffff1660e01b8152600401610be39190612ac5565b5f546001600160a01b031633146116ca5760405162461bcd60e51b815260040161017b90612b14565b5f80546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a35f80546001600160a01b0319169055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b15801561176b575f80fd5b505af115801561177d573d5f803e3d5ffd5b505060405163e8eda9df60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152346024830152868116604483015261ffff861660648301527f000000000000000000000000000000000000000000000000000000000000000016935063e8eda9df925060840190505f604051808303815f87803b15801561181b575f80fd5b505af115801561182d573d5f803e3d5ffd5b50505050505050565b61185760405180606001604052805f81526020015f81526020015f81525090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b1580156118b0575f80fd5b505af11580156118c2573d5f803e3d5ffd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663da5298416040518061012001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001855f016020810190611943919061263c565b61ffff16815260200185602001602081019061195f9190612621565b6001600160a01b0316815260200161197d60608701604088016129f2565b151581526020016119946080870160608801612621565b6001600160a01b031681526020016119b260a087016080880161263c565b61ffff1681526020016119cb60c0870160a08801612621565b6001600160a01b031681526020018560c001358152602001348152506040518263ffffffff1660e01b8152600401611a039190612a0d565b6060604051808303815f875af1158015611a1f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a439190612797565b905061063a33826040015184606001602081019061062a9190612621565b5f546001600160a01b03163314611a8a5760405162461bcd60e51b815260040161017b90612b14565b611a9e6001600160a01b038416838361210c565b505050565b611ac460405180606001604052805f81526020015f81526020015f81525090565b611afd6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633306060860135612245565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637b809dee6040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001855f016020810190611b78919061263c565b61ffff168152602001856020016020810190611b949190612621565b6001600160a01b03168152602001611bb2606087016040880161263c565b61ffff16815260200185606001358152506040518263ffffffff1660e01b8152600401610be39190612ac5565b60405163a415bcad60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081166004830152602482018490526002604483015261ffff831660648301523360848301527f0000000000000000000000000000000000000000000000000000000000000000169063a415bcad9060a4015f604051808303815f87803b158015611c7e575f80fd5b505af1158015611c90573d5f803e3d5ffd5b5050604051632e1a7d4d60e01b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169250632e1a7d4d91506024015f604051808303815f87803b158015611cf3575f80fd5b505af1158015611d05573d5f803e3d5ffd5b50505050611a9e3383612194565b6040516335ea6a7560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f917f0000000000000000000000000000000000000000000000000000000000000000909116906335ea6a75906024016101e060405180830381865afa158015611d9c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dc09190612892565b61014001516040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa158015611e0a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e2e91906129b3565b905080831015611e3b5750815b80341015611e9b5760405162461bcd60e51b815260206004820152602760248201527f6d73672e76616c7565206973206c657373207468616e2072657061796d656e7460448201526608185b5bdd5b9d60ca1b606482015260840161017b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004015f604051808303818588803b158015611ef4575f80fd5b505af1158015611f06573d5f803e3d5ffd5b505060405163573ade8160e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081166004830152602482018690526002604483015286811660648301527f000000000000000000000000000000000000000000000000000000000000000016935063573ade81925060840190506020604051808303815f875af1158015611fa8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fcc91906129b3565b5080341115611fe857611fe833611fe38334612b49565b612194565b50505050565b5f546001600160a01b031633146120175760405162461bcd60e51b815260040161017b90612b14565b6120218282612194565b5050565b5f546001600160a01b0316331461204e5760405162461bcd60e51b815260040161017b90612b14565b6001600160a01b0381166120b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161017b565b5f80546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35f80546001600160a01b0319166001600160a01b0392909216919091179055565b60405163a9059cbb60e01b8082526001600160a01b038416600483015260248201839052905f8060448382895af1612146573d5f803e3d5ffd5b50612150846122e4565b611fe85760405162461bcd60e51b815260206004820152601560248201527423a83b191d103330b4b632b2103a3930b739b332b960591b604482015260640161017b565b604080515f808252602082019092526001600160a01b0384169083906040516121bd9190612b6e565b5f6040518083038185875af1925050503d805f81146121f7576040519150601f19603f3d011682016040523d82523d5f602084013e6121fc565b606091505b5050905080611a9e5760405162461bcd60e51b8152602060048201526015602482015274141315535157d514905394d1915497d19052531151605a1b604482015260640161017b565b6040516323b872dd60e01b8082526001600160a01b0385811660048401528416602483015260448201839052905f80606483828a5af1612287573d5f803e3d5ffd5b50612291856122e4565b6122dd5760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d00000000000000604482015260640161017b565b5050505050565b5f612306565b62461bcd60e51b5f52602060045280602452508060445260645ffd5b3d80156123455760208114612376576123407f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f6122ea565b610d0f565b823b61236d5761236d7311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b60146122ea565b60019150610d0f565b3d5f803e50505f511515919050565b5f60208284031215612395575f80fd5b813567ffffffffffffffff8111156123ab575f80fd5b820160c081850312156123bc575f80fd5b9392505050565b6001600160a01b03811681146123d7575f80fd5b50565b5f805f606084860312156123ec575f80fd5b83356123f7816123c3565b925060208401359150604084013561240e816123c3565b809150509250925092565b5f6101008284031215610d0f575f80fd5b5f60e08284031215610d0f575f80fd5b5f6020828403121561244a575f80fd5b813567ffffffffffffffff811115612460575f80fd5b61246c8482850161242a565b949350505050565b5f805f805f805f60e0888a03121561248a575f80fd5b8735612495816123c3565b96506020880135955060408801356124ac816123c3565b945060608801359350608088013560ff811681146124c8575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f60608284031215610d0f575f80fd5b5f60608284031215612505575f80fd5b6123bc83836124e5565b61ffff811681146123d7575f80fd5b5f805f60608486031215612530575f80fd5b833561253b816123c3565b9250602084013561254b816123c3565b9150604084013561240e8161250f565b5f60e0828403121561256b575f80fd5b6123bc838361242a565b5f805f60608486031215612587575f80fd5b8335612592816123c3565b925060208401356125a2816123c3565b929592945050506040919091013590565b5f60808284031215610d0f575f80fd5b5f805f606084860312156125d5575f80fd5b83356125e0816123c3565b925060208401359150604084013561240e8161250f565b5f8060408385031215612608575f80fd5b8235612613816123c3565b946020939093013593505050565b5f60208284031215612631575f80fd5b81356123bc816123c3565b5f6020828403121561264c575f80fd5b81356123bc8161250f565b5f808335601e1984360301811261266c575f80fd5b83018035915067ffffffffffffffff821115612686575f80fd5b60200191503681900382131561269a575f80fd5b9250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6020815260018060a01b03825116602082015261ffff60208301511660408201525f604083015161270b60608401826001600160a01b03169052565b50606083015161ffff811660808401525060808301516001600160a01b03811660a08401525060a083015160c083015260c083015160e083015260e083015161010080818501525061246c6101208401826126a1565b6040516101e0810167ffffffffffffffff8111828210171561279157634e487b7160e01b5f52604160045260245ffd5b60405290565b5f606082840312156127a7575f80fd5b6040516060810181811067ffffffffffffffff821117156127d657634e487b7160e01b5f52604160045260245ffd5b80604052508251815260208301516020820152604083015160408201528091505092915050565b5f6020828403121561280d575f80fd5b6040516020810181811067ffffffffffffffff8211171561283c57634e487b7160e01b5f52604160045260245ffd5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff8116811461063a575f80fd5b805164ffffffffff8116811461063a575f80fd5b805161063a8161250f565b805161063a816123c3565b5f6101e082840312156128a3575f80fd5b6128ab612761565b6128b584846127fd565b81526128c360208401612849565b60208201526128d460408401612849565b60408201526128e560608401612849565b60608201526128f660808401612849565b608082015261290760a08401612849565b60a082015261291860c08401612868565b60c082015261292960e0840161287c565b60e082015261010061293c818501612887565b9082015261012061294e848201612887565b90820152610140612960848201612887565b90820152610160612972848201612887565b90820152610180612984848201612849565b908201526101a0612996848201612849565b908201526101c06129a8848201612849565b908201529392505050565b5f602082840312156129c3575f80fd5b5051919050565b80151581146123d7575f80fd5b5f602082840312156129e7575f80fd5b81516123bc816129ca565b5f60208284031215612a02575f80fd5b81356123bc816129ca565b81516001600160a01b0316815260208083015161ffff1690820152604080830151610120830191612a48908401826001600160a01b03169052565b506060830151612a5c606084018215159052565b506080830151612a7760808401826001600160a01b03169052565b5060a0830151612a8d60a084018261ffff169052565b5060c0830151612aa860c08401826001600160a01b03169052565b5060e083015160e083015261010080840151818401525092915050565b5f60a08201905060018060a01b03808451168352602084015161ffff80821660208601528260408701511660408601528060608701511660608601525050506080830151608083015292915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b81810381811115612b6857634e487b7160e01b5f52601160045260245ffd5b92915050565b5f82518060208501845e5f92019182525091905056fea164736f6c6343000819000a8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0';

type WrappedTokenGatewayV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrappedTokenGatewayV3ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrappedTokenGatewayV3__factory extends ContractFactory {
  constructor(...args: WrappedTokenGatewayV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    plume: string,
    owner: string,
    pool: string,
    loop: string,
    overrides?: Overrides & { from?: string },
  ): Promise<WrappedTokenGatewayV3> {
    return super.deploy(
      plume,
      owner,
      pool,
      loop,
      overrides || {},
    ) as Promise<WrappedTokenGatewayV3>;
  }
  override getDeployTransaction(
    plume: string,
    owner: string,
    pool: string,
    loop: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      plume,
      owner,
      pool,
      loop,
      overrides || {},
    );
  }
  override attach(address: string): WrappedTokenGatewayV3 {
    return super.attach(address) as WrappedTokenGatewayV3;
  }
  override connect(signer: Signer): WrappedTokenGatewayV3__factory {
    return super.connect(signer) as WrappedTokenGatewayV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrappedTokenGatewayV3Interface {
    return new utils.Interface(_abi) as WrappedTokenGatewayV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): WrappedTokenGatewayV3 {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as WrappedTokenGatewayV3;
  }
}
