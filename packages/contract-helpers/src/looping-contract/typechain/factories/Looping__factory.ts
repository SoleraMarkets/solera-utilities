/* Autogenerated file. Do not edit manually. */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Looping, LoopingInterface } from '../Looping';

const _abi = [
  {
    type: 'constructor',
    inputs: [
      {
        name: '_aavePool',
        type: 'address',
        internalType: 'address',
      },
      {
        name: '_priceOracle',
        type: 'address',
        internalType: 'address',
      },
      {
        name: '_swapRouter',
        type: 'address',
        internalType: 'contract ISwapRouter',
      },
      {
        name: '_oracleDecimals',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '_pUSD',
        type: 'address',
        internalType: 'address',
      },
      {
        name: '_nRWA',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'loopMultiSwap',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopMultiSwapParams',
        components: [
          {
            name: 'supplyToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'borrowToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'initialAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'minAmountSupplied',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'path',
            type: 'bytes',
            internalType: 'bytes',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopData',
        components: [
          {
            name: 'supplyAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'borrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'leftoverBorrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'loopNRWA',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopNRWAParams',
        components: [
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'minAmountSupplied',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'initialAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopData',
        components: [
          {
            name: 'supplyAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'borrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'leftoverBorrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'loopPUSD',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopPUSDParams',
        components: [
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'minAmountSupplied',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'initialAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopData',
        components: [
          {
            name: 'supplyAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'borrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'leftoverBorrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'loopSingleAsset',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopSingleAssetParams',
        components: [
          {
            name: 'token',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'initialAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopData',
        components: [
          {
            name: 'supplyAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'borrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'leftoverBorrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'loopSingleSwap',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopSingleSwapParams',
        components: [
          {
            name: 'supplyToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'isSupplyTokenA',
            type: 'bool',
            internalType: 'bool',
          },
          {
            name: 'borrowToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'maverickPool',
            type: 'address',
            internalType: 'contract IMaverickV2Pool',
          },
          {
            name: 'minAmountSupplied',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'initialAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopData',
        components: [
          {
            name: 'supplyAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'borrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'leftoverBorrowAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'error',
    name: 'InvalidAmount',
    inputs: [],
  },
  {
    type: 'error',
    name: 'InvalidHealthFactor',
    inputs: [],
  },
  {
    type: 'error',
    name: 'InvalidLoops',
    inputs: [],
  },
  {
    type: 'error',
    name: 'InvalidTokens',
    inputs: [],
  },
  {
    type: 'error',
    name: 'MaxSlippageExceeded',
    inputs: [
      {
        name: 'amountOut',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'minAmountOut',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
  },
] as const;

const _bytecode =
  '0x610140604052348015610010575f80fd5b506040516136de3803806136de83398101604081905261002f9161027b565b60015f556001600160a01b0380871660805285811660a05284811660c05260e08490528281166101008190529082166101205215610157576101005160805160405163095ea7b360e01b81526001600160a01b0391821660048201525f602482015291169063095ea7b3906044016020604051808303815f875af11580156100b9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100dd91906102f4565b506101005160805160405163095ea7b360e01b81526001600160a01b0391821660048201525f19602482015291169063095ea7b3906044016020604051808303815f875af1158015610131573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061015591906102f4565b505b610120516001600160a01b031615610259576101205160805160405163095ea7b360e01b81526001600160a01b0391821660048201525f602482015291169063095ea7b3906044016020604051808303815f875af11580156101bb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101df91906102f4565b506101205160805160405163095ea7b360e01b81526001600160a01b0391821660048201525f19602482015291169063095ea7b3906044016020604051808303815f875af1158015610233573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061025791906102f4565b505b50505050505061031a565b6001600160a01b0381168114610278575f80fd5b50565b5f805f805f8060c08789031215610290575f80fd5b865161029b81610264565b60208801519096506102ac81610264565b60408801519095506102bd81610264565b6060880151608089015191955093506102d581610264565b60a08801519092506102e681610264565b809150509295509295509295565b5f60208284031215610304575f80fd5b81518015158114610313575f80fd5b9392505050565b60805160a05160c05160e05161010051610120516131dc6105025f395f818161027c015281816104f9015281816105f4015281816106bb01528181610749015281816107eb015281816108b30152818161093301528181610b1501528181610bbf01528181610c3701528181610cd701528181610f720152818161102101526110af01525f81816101d0015281816103260152818161039e0152818161043e01528181610a6901528181610d9201528181610e7601528181610f4501528181610ff40152818161117701526111f701525f50505f8181611e8001528181611f1e01528181611fa6015281816127890152818161282701526128af01525f81816104710152818161052101528181610d0a01528181610dba01528181611c1001528181611cb2015281816125a0015261264201525f81816101fa015281816102a901528181610377015281816105c501528181610a9301528181610b4201528181610c1001528181610e47015281816112fe015281816113de01528181611479015281816115210152818161160d015281816118a90152818161194e01528181611a2001528181611abb01528181611b6301528181611d9201528181612238015281816122dd015281816123b00152818161244b015281816124f3015261269b01526131dc5ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c806361ceea3d1461005957806376681f2a146100925780637b809dee146100a5578063d5b6e490146100b8578063da529841146100cb575b5f80fd5b61006c610067366004612db8565b6100de565b604080518251815260208084015190820152918101519082015260600160405180910390f35b61006c6100a0366004612db8565b610980565b61006c6100b3366004612db8565b61121e565b61006c6100c6366004612dd9565b61177c565b61006c6100d9366004612e11565b61210a565b6100ff60405180606001604052805f81526020015f81526020015f81525090565b60025f54036101295760405162461bcd60e51b815260040161012090612e22565b60405180910390fd5b60025f908155608083013590036101535760405163162908e360e11b815260040160405180910390fd5b6101636060830160408401612e59565b61ffff165f036101865760405163204ec41160e21b815260040160405180910390fd5b6129046101966020840184612e59565b61ffff1610156101b95760405163185cfc6d60e11b815260040160405180910390fd5b60405163c44b11f760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f917f00000000000000000000000000000000000000000000000000000000000000009091169063c44b11f790602401602060405180830381865afa158015610241573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102659190612e7a565b60405163c44b11f760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529192505f917f0000000000000000000000000000000000000000000000000000000000000000169063c44b11f790602401602060405180830381865afa1580156102ee573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103129190612e7a565b9050608084013561034e6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084612a47565b5f805f5b6103626060890160408a01612e59565b61ffff16811015610869576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663617ba0377f0000000000000000000000000000000000000000000000000000000000000000866103ce60408d0160208e01612edd565b5f6040518563ffffffff1660e01b81526004016103ee9493929190612ef8565b5f604051808303815f87803b158015610405575f80fd5b505af1158015610417573d5f803e3d5ffd5b5050505083836104279190612f39565b60405163b3596f0760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529194505f916105b49187917f0000000000000000000000000000000000000000000000000000000000000000169063b3596f0790602401602060405180830381865afa1580156104b6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104da9190612f4c565b895160301c60ff1660405163b3596f0760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063b3596f0790602401602060405180830381865afa158015610566573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061058a9190612f4c565b8a5160301c60ff168c5161ffff165b8f5f0160208101906105ab9190612e59565b61ffff16612ae6565b9050805f036105c35750610869565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a415bcad7f00000000000000000000000000000000000000000000000000000000000000008360025f8e602001602081019061062a9190612edd565b6040518663ffffffff1660e01b815260040161064a959493929190612f63565b5f604051808303815f87803b158015610661575f80fd5b505af1158015610673573d5f803e3d5ffd5b5050505080836106839190612f39565b9250600161069760608b0160408c01612e59565b6106a19190612f97565b61ffff168210156108605760405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381169163095ea7b3916106f9915f90600401612fb9565b6020604051808303815f875af1158015610715573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107399190612fdf565b5060405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381169163095ea7b391610787918590600401612fb9565b6020604051808303815f875af11580156107a3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107c79190612fdf565b50604051635d043b2960e11b815260048101829052306024820181905260448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ba087652906064016020604051808303815f875af1158015610839573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061085d9190612f4c565b94505b50600101610352565b50866060013582101561089c5760405163593100b560e11b81526004810183905260608801356024820152604401610120565b6040516370a0823160e01b81523060048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610900573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109249190612f4c565b905061095a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383612b85565b6040805160608101825293845260208401929092529082015260015f5595945050505050565b6109a160405180606001604052805f81526020015f81526020015f81525090565b60025f54036109c25760405162461bcd60e51b815260040161012090612e22565b60025f908155608083013590036109ec5760405163162908e360e11b815260040160405180910390fd5b6109fc6060830160408401612e59565b61ffff165f03610a1f5760405163204ec41160e21b815260040160405180910390fd5b612904610a2f6020840184612e59565b61ffff161015610a525760405163185cfc6d60e11b815260040160405180910390fd5b60405163c44b11f760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f917f00000000000000000000000000000000000000000000000000000000000000009091169063c44b11f790602401602060405180830381865afa158015610ada573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610afe9190612e7a565b60405163c44b11f760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529192505f917f0000000000000000000000000000000000000000000000000000000000000000169063c44b11f790602401602060405180830381865afa158015610b87573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bab9190612e7a565b90506080840135610be76001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084612a47565b5f805f5b610bfb6060890160408a01612e59565b61ffff1681101561112d576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663617ba0377f000000000000000000000000000000000000000000000000000000000000000086610c6760408d0160208e01612edd565b5f6040518563ffffffff1660e01b8152600401610c879493929190612ef8565b5f604051808303815f87803b158015610c9e575f80fd5b505af1158015610cb0573d5f803e3d5ffd5b505050508383610cc09190612f39565b60405163b3596f0760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529194505f91610e369187917f0000000000000000000000000000000000000000000000000000000000000000169063b3596f0790602401602060405180830381865afa158015610d4f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d739190612f4c565b885160301c60ff1660405163b3596f0760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063b3596f0790602401602060405180830381865afa158015610dff573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e239190612f4c565b8b5160301c60ff168b5161ffff16610599565b9050805f03610e45575061112d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a415bcad7f00000000000000000000000000000000000000000000000000000000000000008360025f8e6020016020810190610eac9190612edd565b6040518663ffffffff1660e01b8152600401610ecc959493929190612f63565b5f604051808303815f87803b158015610ee3575f80fd5b505af1158015610ef5573d5f803e3d5ffd5b505050508083610f059190612f39565b92506001610f1960608b0160408c01612e59565b610f239190612f97565b61ffff168210156111245760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390610f9c907f0000000000000000000000000000000000000000000000000000000000000000905f90600401612fb9565b6020604051808303815f875af1158015610fb8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fdc9190612fdf565b5060405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b39061104b907f0000000000000000000000000000000000000000000000000000000000000000908590600401612fb9565b6020604051808303815f875af1158015611067573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061108b9190612fdf565b50604051630b8b4a6160e21b815260048101829052306024820181905260448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e2d2984906064016020604051808303815f875af11580156110fd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111219190612f4c565b94505b50600101610beb565b5086606001358210156111605760405163593100b560e11b81526004810183905260608801356024820152604401610120565b6040516370a0823160e01b81523060048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156111c4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111e89190612f4c565b905061095a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383612b85565b61123f60405180606001604052805f81526020015f81526020015f81525090565b60025f54036112605760405162461bcd60e51b815260040161012090612e22565b60025f9081556080830135900361128a5760405163162908e360e11b815260040160405180910390fd5b61129a6080830160608401612e59565b61ffff165f036112bd5760405163204ec41160e21b815260040160405180910390fd5b6129046112d06040840160208501612e59565b61ffff1610156112f35760405163185cfc6d60e11b815260040160405180910390fd5b5f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663c44b11f76113306020860186612edd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611372573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113969190612e7a565b905060808301356113c13330836113b06020890189612edd565b6001600160a01b0316929190612a47565b6113ce6020850185612edd565b6001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000005f6040518363ffffffff1660e01b815260040161141b929190612fb9565b6020604051808303815f875af1158015611437573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061145b9190612fdf565b506114696020850185612edd565b6001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000005f196040518363ffffffff1660e01b81526004016114b7929190612fb9565b6020604051808303815f875af11580156114d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114f79190612fdf565b505f805f5b61150c6080880160608901612e59565b61ffff168110156116bc576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663617ba03761155360208a018a612edd565b8661156460608c0160408d01612edd565b5f6040518563ffffffff1660e01b81526004016115849493929190612ef8565b5f604051808303815f87803b15801561159b575f80fd5b505af11580156115ad573d5f803e3d5ffd5b5050505083836115bd9190612f39565b92505f6115f4856115d5885160ff60309190911c1690565b885161ffff166115eb60408d0160208e01612e59565b61ffff16612c13565b9050805f0361160357506116bc565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a415bcad61163f60208b018b612edd565b8360025f8d60400160208101906116569190612edd565b6040518663ffffffff1660e01b8152600401611676959493929190612f63565b5f604051808303815f87803b15801561168d575f80fd5b505af115801561169f573d5f803e3d5ffd5b5050505080836116af9190612f39565b90945091506001016114fc565b505f6116cb6020880188612edd565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561170f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117339190612f4c565b9050611757338261174760208b018b612edd565b6001600160a01b03169190612b85565b6040805160608101825293845260208401929092529082015260015f55949350505050565b61179d60405180606001604052805f81526020015f81526020015f81525090565b60025f54036117be5760405162461bcd60e51b815260040161012090612e22565b60025f90815560a083013590036117e85760405163162908e360e11b815260040160405180910390fd5b6117f86080830160608401612e59565b61ffff165f0361181b5760405163204ec41160e21b815260040160405180910390fd5b61290461182e6040840160208501612e59565b61ffff1610156118515760405163185cfc6d60e11b815260040160405180910390fd5b6118616060830160408401612edd565b6001600160a01b03166118776020840184612edd565b6001600160a01b03160361189e576040516333910aef60e11b815260040160405180910390fd5b5f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663c44b11f76118db6020860186612edd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561191d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119419190612e7a565b90505f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663c44b11f76119836060870160408801612edd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156119c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119e99190612e7a565b905060a0840135611a033330836113b060208a018a612edd565b611a106020860186612edd565b6001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000005f6040518363ffffffff1660e01b8152600401611a5d929190612fb9565b6020604051808303815f875af1158015611a79573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a9d9190612fdf565b50611aab6020860186612edd565b6001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000005f196040518363ffffffff1660e01b8152600401611af9929190612fb9565b6020604051808303815f875af1158015611b15573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b399190612fdf565b505f805f5b611b4e6080890160608a01612e59565b61ffff16811015612047576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663617ba037611b9560208b018b612edd565b86611ba660a08d0160808e01612edd565b5f6040518563ffffffff1660e01b8152600401611bc69493929190612ef8565b5f604051808303815f87803b158015611bdd575f80fd5b505af1158015611bef573d5f803e3d5ffd5b505050508383611bff9190612f39565b92505f611d79856001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663b3596f07611c4260208e018e612edd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611c84573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ca89190612f4c565b895160301c60ff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b3596f078e6040016020810190611cf29190612edd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611d34573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d589190612f4c565b8a5160301c60ff168c5161ffff168f60200160208101906105ab9190612e59565b9050805f03611d885750612047565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a415bcad611dc760608c0160408d01612edd565b8360025f8e6080016020810190611dde9190612edd565b6040518663ffffffff1660e01b8152600401611dfe959493929190612f63565b5f604051808303815f87803b158015611e15575f80fd5b505af1158015611e27573d5f803e3d5ffd5b505050508083611e379190612f39565b92506001611e4b60808b0160608c01612e59565b611e559190612f97565b61ffff1682101561203e57611e7060608a0160408b01612edd565b6001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000005f6040518363ffffffff1660e01b8152600401611ebd929190612fb9565b6020604051808303815f875af1158015611ed9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611efd9190612fdf565b50611f0e60608a0160408b01612edd565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b8152600401611f5b929190612fb9565b6020604051808303815f875af1158015611f77573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f9b9190612fdf565b506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663522ba7eb30611fd960e08d018d612ffa565b855f6040518663ffffffff1660e01b8152600401611ffb959493929190613044565b6020604051808303815f875af1158015612017573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061203b9190612f4c565b94505b50600101611b3e565b508660c0013582101561207a5760405163593100b560e11b81526004810183905260c08801356024820152604401610120565b5f61208b6060890160408a01612edd565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156120cf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120f39190612f4c565b905061095a338261174760608c0160408d01612edd565b61212b60405180606001604052805f81526020015f81526020015f81525090565b60025f540361214c5760405162461bcd60e51b815260040161012090612e22565b60025f90815561010083013590036121775760405163162908e360e11b815260040160405180910390fd5b61218760c0830160a08401612e59565b61ffff165f036121aa5760405163204ec41160e21b815260040160405180910390fd5b6129046121bd6040840160208501612e59565b61ffff1610156121e05760405163185cfc6d60e11b815260040160405180910390fd5b6121f060a0830160808401612edd565b6001600160a01b03166122066020840184612edd565b6001600160a01b03160361222d576040516333910aef60e11b815260040160405180910390fd5b5f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663c44b11f761226a6020860186612edd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156122ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122d09190612e7a565b90505f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663c44b11f761231260a0870160808801612edd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015612354573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123789190612e7a565b90506101008401356123933330836113b060208a018a612edd565b6123a06020860186612edd565b6001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000005f6040518363ffffffff1660e01b81526004016123ed929190612fb9565b6020604051808303815f875af1158015612409573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061242d9190612fdf565b5061243b6020860186612edd565b6001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000005f196040518363ffffffff1660e01b8152600401612489929190612fb9565b6020604051808303815f875af11580156124a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906124c99190612fdf565b505f805f5b6124de60c0890160a08a01612e59565b61ffff16811015612984576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663617ba03761252560208b018b612edd565b8661253660608d0160408e01612edd565b5f6040518563ffffffff1660e01b81526004016125569493929190612ef8565b5f604051808303815f87803b15801561256d575f80fd5b505af115801561257f573d5f803e3d5ffd5b50505050838361258f9190612f39565b92505f612682856001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663b3596f076125d260208e018e612edd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015612614573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906126389190612f4c565b895160301c60ff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b3596f078e6080016020810190611cf29190612edd565b9050805f036126915750612984565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a415bcad6126d060a08c0160808d01612edd565b8360025f8e60400160208101906126e79190612edd565b6040518663ffffffff1660e01b8152600401612707959493929190612f63565b5f604051808303815f87803b15801561271e575f80fd5b505af1158015612730573d5f803e3d5ffd5b5050505080836127409190612f39565b9250600161275460c08b0160a08c01612e59565b61275e9190612f97565b61ffff1682101561297b5761277960a08a0160808b01612edd565b6001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000005f6040518363ffffffff1660e01b81526004016127c6929190612fb9565b6020604051808303815f875af11580156127e2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128069190612fdf565b5061281760a08a0160808b01612edd565b6001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b8152600401612864929190612fb9565b6020604051808303815f875af1158015612880573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128a49190612fdf565b506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a3b105ca306128e560e08d0160c08e01612edd565b6128f560808e0160608f01613093565b6040516001600160e01b031960e086901b1681526001600160a01b039384166004820152929091166024830152156044820152606481018490525f608482015260a4016020604051808303815f875af1158015612954573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906129789190612f4c565b94505b506001016124ce565b508660e001358210156129b75760405163593100b560e11b81526004810183905260e08801356024820152604401610120565b5f6129c860a0890160808a01612edd565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015612a0c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612a309190612f4c565b905061095a338261174760a08c0160808d01612edd565b6040516323b872dd60e01b8082526001600160a01b0385811660048401528416602483015260448201839052905f80606483828a5af1612a89573d5f803e3d5ffd5b50612a9385612c83565b612adf5760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d000000000000006044820152606401610120565b5050505050565b5f80612af387600a61318e565b612b0590670de0b6b3a7640000613199565b612b0f908a6131b8565b90505f612b36612b28612b2187612d26565b8490612d3d565b612b3186612d26565b612d73565b90505f612b4c612b468b84612d3d565b89612d73565b9050670de0b6b3a7640000612b6288600a61318e565b612b6c90836131b8565b612b769190613199565b9b9a5050505050505050505050565b60405163a9059cbb60e01b8082526001600160a01b038416600483015260248201839052905f8060448382895af1612bbf573d5f803e3d5ffd5b50612bc984612c83565b612c0d5760405162461bcd60e51b815260206004820152601560248201527423a83b191d103330b4b632b2103a3930b739b332b960591b6044820152606401610120565b50505050565b5f80612c2085600a61318e565b612c3290670de0b6b3a7640000613199565b612c3c90876131b8565b90505f612c4e612b28612b2187612d26565b9050670de0b6b3a7640000612c6487600a61318e565b612c6e90836131b8565b612c789190613199565b979650505050505050565b5f612ca5565b62461bcd60e51b5f52602060045280602452508060445260645ffd5b3d8015612ce45760208114612d1557612cdf7f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f612c89565b612d20565b823b612d0c57612d0c7311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014612c89565b60019150612d20565b3d5f803e5f51151591505b50919050565b5f612d3782655af3107a40006131b8565b92915050565b5f81156706f05b59d3b200001983900484111517612d59575f80fd5b50670de0b6b3a764000091026706f05b59d3b20000010490565b5f8115670de0b6b3a764000060028404190484111715612d91575f80fd5b50670de0b6b3a76400009190910260028204010490565b5f60a08284031215612d20575f80fd5b5f60a08284031215612dc8575f80fd5b612dd28383612da8565b9392505050565b5f60208284031215612de9575f80fd5b813567ffffffffffffffff811115612dff575f80fd5b82016101008185031215612dd2575f80fd5b5f6101208284031215612d20575f80fd5b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b5f60208284031215612e69575f80fd5b813561ffff81168114612dd2575f80fd5b5f60208284031215612e8a575f80fd5b6040516020810181811067ffffffffffffffff82111715612eb957634e487b7160e01b5f52604160045260245ffd5b6040529151825250919050565b6001600160a01b0381168114612eda575f80fd5b50565b5f60208284031215612eed575f80fd5b8135612dd281612ec6565b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b80820180821115612d3757612d37612f25565b5f60208284031215612f5c575f80fd5b5051919050565b6001600160a01b0395861681526020810194909452604084019290925261ffff166060830152909116608082015260a00190565b61ffff828116828216039080821115612fb257612fb2612f25565b5092915050565b6001600160a01b03929092168252602082015260400190565b8015158114612eda575f80fd5b5f60208284031215612fef575f80fd5b8151612dd281612fd2565b5f808335601e1984360301811261300f575f80fd5b83018035915067ffffffffffffffff821115613029575f80fd5b60200191503681900382131561303d575f80fd5b9250929050565b6001600160a01b03861681526080602082018190528101849052838560a08301375f60a085830101525f60a0601f19601f87011683010190508360408301528260608301529695505050505050565b5f602082840312156130a3575f80fd5b8135612dd281612fd2565b600181815b808511156130e857815f19048211156130ce576130ce612f25565b808516156130db57918102915b93841c93908002906130b3565b509250929050565b5f826130fe57506001612d37565b8161310a57505f612d37565b8160018114613120576002811461312a57613146565b6001915050612d37565b60ff84111561313b5761313b612f25565b50506001821b612d37565b5060208310610133831016604e8410600b8410161715613169575081810a612d37565b61317383836130ae565b805f190482111561318657613186612f25565b029392505050565b5f612dd283836130f0565b5f826131b357634e487b7160e01b5f52601260045260245ffd5b500490565b8082028115828204841417612d3757612d37612f2556fea164736f6c6343000819000a';

type LoopingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LoopingConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Looping__factory extends ContractFactory {
  constructor(...args: LoopingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _aavePool: string,
    _priceOracle: string,
    _swapRouter: string,
    _oracleDecimals: BigNumberish,
    _pUSD: string,
    _nRWA: string,
    overrides?: Overrides & { from?: string },
  ): Promise<Looping> {
    return super.deploy(
      _aavePool,
      _priceOracle,
      _swapRouter,
      _oracleDecimals,
      _pUSD,
      _nRWA,
      overrides || {},
    ) as Promise<Looping>;
  }
  override getDeployTransaction(
    _aavePool: string,
    _priceOracle: string,
    _swapRouter: string,
    _oracleDecimals: BigNumberish,
    _pUSD: string,
    _nRWA: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _aavePool,
      _priceOracle,
      _swapRouter,
      _oracleDecimals,
      _pUSD,
      _nRWA,
      overrides || {},
    );
  }
  override attach(address: string): Looping {
    return super.attach(address) as Looping;
  }
  override connect(signer: Signer): Looping__factory {
    return super.connect(signer) as Looping__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LoopingInterface {
    return new utils.Interface(_abi) as LoopingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): Looping {
    return new Contract(address, _abi, signerOrProvider) as Looping;
  }
}
