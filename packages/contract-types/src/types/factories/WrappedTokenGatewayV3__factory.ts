/* Autogenerated file. Do not edit manually. */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  WrappedTokenGatewayV3,
  WrappedTokenGatewayV3Interface,
} from '../WrappedTokenGatewayV3';

const _abi = [
  {
    type: 'constructor',
    inputs: [
      {
        name: 'weth',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'owner',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'pool',
        type: 'address',
        internalType: 'contract IPool',
      },
      {
        name: 'loop',
        type: 'address',
        internalType: 'contract ILooping',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'fallback',
    stateMutability: 'payable',
  },
  {
    type: 'receive',
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'borrowETH',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'referralCode',
        type: 'uint16',
        internalType: 'uint16',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'depositETH',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'onBehalfOf',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'referralCode',
        type: 'uint16',
        internalType: 'uint16',
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'emergencyEtherTransfer',
    inputs: [
      {
        name: 'to',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'emergencyTokenTransfer',
    inputs: [
      {
        name: 'token',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'to',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'getWETHAddress',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'loopETHSingleAsset',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopETHSingleAssetParams',
        components: [
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'loopEntryETHMultiSwap',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopEntryETHMultiSwapParams',
        components: [
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'borrowToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'minAmountSupplied',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'path',
            type: 'bytes',
            internalType: 'bytes',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'loopEntryETHSingleAsset',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopEntryETHSingleAssetParams',
        components: [
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'loopEntryETHSingleSwap',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopEntryETHSingleSwapParams',
        components: [
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'isSupplyTokenA',
            type: 'bool',
            internalType: 'bool',
          },
          {
            name: 'borrowToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'maverickPool',
            type: 'address',
            internalType: 'contract IMaverickV2Pool',
          },
          {
            name: 'minAmountSupplied',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'loopExitETHMultiSwap',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopExitETHMultiSwapParams',
        components: [
          {
            name: 'supplyToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'minAmountSupplied',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'initialAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'path',
            type: 'bytes',
            internalType: 'bytes',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'loopExitETHSingleAsset',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopExitETHSingleAssetParams',
        components: [
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'initialAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'loopExitETHSingleSwap',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct LoopDataTypes.LoopExitETHSingleSwapParams',
        components: [
          {
            name: 'supplyToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'targetHealthFactor',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'onBehalfOf',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'isSupplyTokenA',
            type: 'bool',
            internalType: 'bool',
          },
          {
            name: 'numLoops',
            type: 'uint16',
            internalType: 'uint16',
          },
          {
            name: 'maverickPool',
            type: 'address',
            internalType: 'contract IMaverickV2Pool',
          },
          {
            name: 'minAmountSupplied',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'initialAmount',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'repayETH',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'onBehalfOf',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [
      {
        name: 'newOwner',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'withdrawETH',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'to',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'withdrawETHWithPermit',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'to',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'deadline',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'permitV',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: 'permitR',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 'permitS',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      {
        name: 'previousOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'newOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'error',
    name: 'TransferETHFailed',
    inputs: [],
  },
] as const;

const _bytecode =
  '0x60e060405234801561000f575f80fd5b50604051612f24380380612f2483398101604081905261002e91610288565b5f80546001600160a01b031916339081178255604051909182915f80516020612f04833981519152908290a3506001600160a01b0380851660805282811660a052811660c05261007d83610168565b60405163095ea7b360e01b81526001600160a01b0383811660048301525f19602483015285169063095ea7b3906044016020604051808303815f875af11580156100c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100ed91906102e4565b5060405163095ea7b360e01b81526001600160a01b0382811660048301525f19602483015285169063095ea7b3906044016020604051808303815f875af115801561013a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061015e91906102e4565b505050505061030a565b5f546001600160a01b031633146101c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661022b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101bd565b5f80546040516001600160a01b03808516939216915f80516020612f0483398151915291a35f80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114610285575f80fd5b50565b5f805f806080858703121561029b575f80fd5b84516102a681610271565b60208601519094506102b781610271565b60408601519093506102c881610271565b60608601519092506102d981610271565b939692955090935050565b5f602082840312156102f4575f80fd5b81518015158114610303575f80fd5b9392505050565b60805160a05160c051612a9561046f5f395f8181610425015281816106ae01528181610a1101528181610bb701528181610c5601528181610cd7015281816111f80152818161129701528181611318015281816117a90152611e4c01525f818161093901528181610edb0152818161108601528181611497015281816116a10152818161198001528181611baa0152611cfe01525f818161011c015281816102ec015281816103f40152818161045f0152818161056b0152818161063b015281816106e901528181610877015281816108f90152818161099e01528181610a4b01528181610b4101528181610d5301528181610eb10152818161105101528181611107015281816113c90152818161146d015281816115e00152818161165a01528181611736015281816117e40152818161195601528181611b7501528181611c2b01528181611caf01528181611d6901528181611dd90152611e860152612a955ff3fe60806040526004361061010c575f3560e01c8063affa881711610094578063d4c40b6c11610063578063d4c40b6c14610355578063e74f7b8514610374578063ee4a34d914610393578063eed88b8d146103a6578063f2fde38b146103c557610186565b8063affa8817146102de578063b42c413b14610310578063bcc3c2551461032f578063d2fcd3ec1461034257610186565b806362bf3e0c116100db57806362bf3e0c1461023d578063715018a61461025c57806380500d20146102705780638da5cb5b1461028f578063a3d5b255146102bf57610186565b80630d087592146101c55780634366e0aa14610204578063474cf53d146102175780635ba4061a1461022a57610186565b3661018657336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101845760405162461bcd60e51b8152602060048201526013602482015272149958d95a5d99481b9bdd08185b1b1bddd959606a1b60448201526064015b60405180910390fd5b005b60405162461bcd60e51b815260206004820152601460248201527311985b1b189858dac81b9bdd08185b1b1bddd95960621b604482015260640161017b565b3480156101d0575f80fd5b506101e46101df3660046122bf565b6103e4565b604080519384526020840192909252908201526060015b60405180910390f35b6101e46102123660046122cf565b610636565b610184610225366004612333565b610875565b6101e461023836600461238b565b610999565b348015610248575f80fd5b506101e46102573660046123b5565b610b68565b348015610267575f80fd5b50610184610e29565b34801561027b575f80fd5b5061018461028a3660046123ef565b610e9a565b34801561029a575f80fd5b505f546001600160a01b03165b6040516001600160a01b0390911681526020016101fb565b3480156102ca575f80fd5b506101846102d9366004612423565b611178565b3480156102e9575f80fd5b507f00000000000000000000000000000000000000000000000000000000000000006102a7565b34801561031b575f80fd5b506101e461032a366004612461565b6111ba565b61018461033d3660046123ef565b611456565b6101e4610350366004612472565b611731565b348015610360575f80fd5b5061018461036f36600461248c565b61193f565b34801561037f575f80fd5b5061018461038e3660046124fd565b611ca0565b6101e46103a136600461238b565b611dd4565b3480156103b1575f80fd5b506101846103c0366004612531565b611f28565b3480156103d0575f80fd5b506101846103df36600461255b565b611f5f565b5f80806104206001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633306060880135612046565b5f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637b809dee6040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018a5f01602081019061049e9190612576565b61ffff1681526020018a60200160208101906104ba919061255b565b6001600160a01b031681526020016104d860608c0160408d01612576565b61ffff1681526020018a606001358152506040518263ffffffff1660e01b81526004016105059190612591565b6060604051808303815f875af1158015610521573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054591906125e0565b604051632e1a7d4d60e01b81526004810182905292955090935091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d906024015f604051808303815f87803b1580156105ac575f80fd5b505af11580156105be573d5f803e3d5ffd5b50506040515f925033915083908381818185875af1925050503d805f8114610601576040519150601f19603f3d011682016040523d82523d5f602084013e610606565b606091505b5050905080610628576040516389a360eb60e01b815260040160405180910390fd5b509196909550909350915050565b5f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b158015610692575f80fd5b505af11580156106a4573d5f803e3d5ffd5b50505050505f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d5b6e4906040518061010001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018a5f0160208101906107289190612576565b61ffff16815260200161074160608c0160408d0161255b565b6001600160a01b0316815260200161075f60808c0160608d01612576565b61ffff1681526020018a602001602081019061077b919061255b565b6001600160a01b0316815234602082015260808b013560408201526060016107a660a08c018c61260b565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050509152506040516001600160e01b031960e084901b1681526107fc9190600401612683565b6060604051808303815f875af1158015610818573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083c91906125e0565b91945092509050610868338261085860608b0160408c0161255b565b6001600160a01b031691906120e5565b9196909550909350915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b1580156108ce575f80fd5b505af11580156108e0573d5f803e3d5ffd5b505060405163e8eda9df60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152346024830152868116604483015261ffff861660648301527f000000000000000000000000000000000000000000000000000000000000000016935063e8eda9df925060840190505f604051808303815f87803b15801561097e575f80fd5b505af1158015610990573d5f803e3d5ffd5b50505050505050565b5f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b1580156109f5575f80fd5b505af1158015610a07573d5f803e3d5ffd5b50505050505f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637b809dee6040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018a5f016020810190610a8a9190612576565b61ffff1681526020018a6020016020810190610aa6919061255b565b6001600160a01b03168152602001610ac460608c0160408d01612576565b61ffff168152602001348152506040518263ffffffff1660e01b8152600401610aed9190612591565b6060604051808303815f875af1158015610b09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b2d91906125e0565b919450925090506108686001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836120e5565b5f8080610b93333060a0870135610b82602089018961255b565b6001600160a01b0316929190612046565b610ba0602085018561255b565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f6024830152919091169063095ea7b3906044016020604051808303815f875af1158015610c0d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c319190612722565b50610c3f602085018561255b565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f196024830152919091169063095ea7b3906044016020604051808303815f875af1158015610cad573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cd19190612722565b505f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d5b6e4906040518061010001604052808a5f016020810190610d22919061255b565b6001600160a01b031681526020018a6020016020810190610d439190612576565b61ffff1681526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166020820152604001610d8b60808c0160608d01612576565b61ffff168152602001610da460608c0160408d0161255b565b6001600160a01b0316815260a08b0135602082015260808b01356040820152606001610dd360c08c018c61260b565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050509152506040516001600160e01b031960e084901b1681526105059190600401612683565b5f546001600160a01b03163314610e525760405162461bcd60e51b815260040161017b9061273d565b5f80546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a35f80546001600160a01b0319169055565b6040516335ea6a7560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f917f0000000000000000000000000000000000000000000000000000000000000000909116906335ea6a75906024016101e060405180830381865afa158015610f23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f479190612842565b61010001516040516370a0823160e01b81523360048201529091505f906001600160a01b038316906370a0823190602401602060405180830381865afa158015610f93573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fb79190612963565b90508360018101610fc55750805b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038416906323b872dd906064016020604051808303815f875af1158015611015573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110399190612722565b50604051631a4ca37b60e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390523060448301527f000000000000000000000000000000000000000000000000000000000000000016906369328dec906064016020604051808303815f875af11580156110cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110f09190612963565b50604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024015f604051808303815f87803b158015611150575f80fd5b505af1158015611162573d5f803e3d5ffd5b50505050611170848261216d565b505050505050565b5f546001600160a01b031633146111a15760405162461bcd60e51b815260040161017b9061273d565b6111b56001600160a01b03841683836120e5565b505050565b5f80806111d4333060e0870135610b82602089018961255b565b6111e1602085018561255b565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f6024830152919091169063095ea7b3906044016020604051808303815f875af115801561124e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112729190612722565b50611280602085018561255b565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f196024830152919091169063095ea7b3906044016020604051808303815f875af11580156112ee573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113129190612722565b505f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663da5298416040518061012001604052808a5f016020810190611363919061255b565b6001600160a01b031681526020018a60200160208101906113849190612576565b61ffff16815260200161139d60608c0160408d0161255b565b6001600160a01b031681526020016113bb60808c0160608d0161297a565b151581526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602082015260400161140160a08c0160808d01612576565b61ffff16815260200161141a60c08c0160a08d0161255b565b6001600160a01b031681526020018a60c0013581526020018a60e001358152506040518263ffffffff1660e01b81526004016105059190612995565b6040516335ea6a7560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f917f0000000000000000000000000000000000000000000000000000000000000000909116906335ea6a75906024016101e060405180830381865afa1580156114df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115039190612842565b61014001516040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa15801561154d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115719190612963565b90508083101561157e5750815b803410156115de5760405162461bcd60e51b815260206004820152602760248201527f6d73672e76616c7565206973206c657373207468616e2072657061796d656e7460448201526608185b5bdd5b9d60ca1b606482015260840161017b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004015f604051808303818588803b158015611637575f80fd5b505af1158015611649573d5f803e3d5ffd5b505060405163573ade8160e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081166004830152602482018690526002604483015286811660648301527f000000000000000000000000000000000000000000000000000000000000000016935063573ade81925060840190506020604051808303815f875af11580156116eb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061170f9190612963565b508034111561172b5761172b336117268334612a4d565b61216d565b50505050565b5f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b15801561178d575f80fd5b505af115801561179f573d5f803e3d5ffd5b50505050505f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663da5298416040518061012001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018a5f0160208101906118239190612576565b61ffff1681526020018a602001602081019061183f919061255b565b6001600160a01b0316815260200161185d60608c0160408d0161297a565b1515815260200161187460808c0160608d0161255b565b6001600160a01b0316815260200161189260a08c0160808d01612576565b61ffff1681526020016118ab60c08c0160a08d0161255b565b6001600160a01b031681526020018a60c001358152602001348152506040518263ffffffff1660e01b81526004016118e39190612995565b6060604051808303815f875af11580156118ff573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061192391906125e0565b91945092509050610868338261085860808b0160608c0161255b565b6040516335ea6a7560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f917f0000000000000000000000000000000000000000000000000000000000000000909116906335ea6a75906024016101e060405180830381865afa1580156119c8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119ec9190612842565b61010001516040516370a0823160e01b81523360048201529091505f906001600160a01b038316906370a0823190602401602060405180830381865afa158015611a38573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a5c9190612963565b90508760018101611a6a5750805b60405163d505accf60e01b8152336004820152306024820152604481018a90526064810188905260ff8716608482015260a4810186905260c481018590526001600160a01b0384169063d505accf9060e4015f604051808303815f87803b158015611ad3575f80fd5b505af1158015611ae5573d5f803e3d5ffd5b50506040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03861692506323b872dd91506064016020604051808303815f875af1158015611b39573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b5d9190612722565b50604051631a4ca37b60e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390523060448301527f000000000000000000000000000000000000000000000000000000000000000016906369328dec906064016020604051808303815f875af1158015611bf0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c149190612963565b50604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024015f604051808303815f87803b158015611c74575f80fd5b505af1158015611c86573d5f803e3d5ffd5b50505050611c94888261216d565b50505050505050505050565b60405163a415bcad60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081166004830152602482018490526002604483015261ffff831660648301523360848301527f0000000000000000000000000000000000000000000000000000000000000000169063a415bcad9060a4015f604051808303815f87803b158015611d3f575f80fd5b505af1158015611d51573d5f803e3d5ffd5b5050604051632e1a7d4d60e01b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169250632e1a7d4d91506024015f604051808303815f87803b158015611db4575f80fd5b505af1158015611dc6573d5f803e3d5ffd5b505050506111b5338361216d565b5f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b158015611e30575f80fd5b505af1158015611e42573d5f803e3d5ffd5b50505050505f805f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637b809dee6040518060a001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018a5f016020810190611ec59190612576565b61ffff1681526020018a6020016020810190611ee1919061255b565b6001600160a01b03168152602001611eff60608c0160408d01612576565b61ffff168152602001348152506040518263ffffffff1660e01b81526004016105059190612591565b5f546001600160a01b03163314611f515760405162461bcd60e51b815260040161017b9061273d565b611f5b828261216d565b5050565b5f546001600160a01b03163314611f885760405162461bcd60e51b815260040161017b9061273d565b6001600160a01b038116611fed5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161017b565b5f80546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35f80546001600160a01b0319166001600160a01b0392909216919091179055565b6040516323b872dd60e01b8082526001600160a01b0385811660048401528416602483015260448201839052905f80606483828a5af1612088573d5f803e3d5ffd5b506120928561221c565b6120de5760405162461bcd60e51b815260206004820152601960248201527f475076323a206661696c6564207472616e7366657246726f6d00000000000000604482015260640161017b565b5050505050565b60405163a9059cbb60e01b8082526001600160a01b038416600483015260248201839052905f8060448382895af161211f573d5f803e3d5ffd5b506121298461221c565b61172b5760405162461bcd60e51b815260206004820152601560248201527423a83b191d103330b4b632b2103a3930b739b332b960591b604482015260640161017b565b604080515f808252602082019092526001600160a01b0384169083906040516121969190612a72565b5f6040518083038185875af1925050503d805f81146121d0576040519150601f19603f3d011682016040523d82523d5f602084013e6121d5565b606091505b50509050806111b55760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b604482015260640161017b565b5f61223e565b62461bcd60e51b5f52602060045280602452508060445260645ffd5b3d801561227d57602081146122ae576122787f475076323a206d616c666f726d6564207472616e7366657220726573756c7400601f612222565b6122b9565b823b6122a5576122a57311d41d8c8e881b9bdd08184818dbdb9d1c9858dd60621b6014612222565b600191506122b9565b3d5f803e5f51151591505b50919050565b5f608082840312156122b9575f80fd5b5f602082840312156122df575f80fd5b813567ffffffffffffffff8111156122f5575f80fd5b820160c08185031215612306575f80fd5b9392505050565b6001600160a01b0381168114612321575f80fd5b50565b61ffff81168114612321575f80fd5b5f805f60608486031215612345575f80fd5b83356123508161230d565b925060208401356123608161230d565b9150604084013561237081612324565b809150509250925092565b5f606082840312156122b9575f80fd5b5f6060828403121561239b575f80fd5b612306838361237b565b5f60e082840312156122b9575f80fd5b5f602082840312156123c5575f80fd5b813567ffffffffffffffff8111156123db575f80fd5b6123e7848285016123a5565b949350505050565b5f805f60608486031215612401575f80fd5b833561240c8161230d565b92506020840135915060408401356123708161230d565b5f805f60608486031215612435575f80fd5b83356124408161230d565b925060208401356124508161230d565b929592945050506040919091013590565b5f61010082840312156122b9575f80fd5b5f60e08284031215612482575f80fd5b61230683836123a5565b5f805f805f805f60e0888a0312156124a2575f80fd5b87356124ad8161230d565b96506020880135955060408801356124c48161230d565b945060608801359350608088013560ff811681146124e0575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f805f6060848603121561250f575f80fd5b833561251a8161230d565b925060208401359150604084013561237081612324565b5f8060408385031215612542575f80fd5b823561254d8161230d565b946020939093013593505050565b5f6020828403121561256b575f80fd5b81356123068161230d565b5f60208284031215612586575f80fd5b813561230681612324565b5f60a08201905060018060a01b03808451168352602084015161ffff80821660208601528260408701511660408601528060608701511660608601525050506080830151608083015292915050565b5f805f606084860312156125f2575f80fd5b8351925060208401519150604084015190509250925092565b5f808335601e19843603018112612620575f80fd5b83018035915067ffffffffffffffff82111561263a575f80fd5b60200191503681900382131561264e575f80fd5b9250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6020815260018060a01b03825116602082015261ffff60208301511660408201525f60408301516126bf60608401826001600160a01b03169052565b50606083015161ffff811660808401525060808301516001600160a01b03811660a08401525060a083015160c083015260c083015160e083015260e08301516101008081850152506123e7610120840182612655565b8015158114612321575f80fd5b5f60208284031215612732575f80fd5b815161230681612715565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6040516101e0810167ffffffffffffffff811182821017156127a257634e487b7160e01b5f52604160045260245ffd5b60405290565b5f602082840312156127b8575f80fd5b6040516020810181811067ffffffffffffffff821117156127e757634e487b7160e01b5f52604160045260245ffd5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff81168114612813575f80fd5b919050565b805164ffffffffff81168114612813575f80fd5b805161281381612324565b80516128138161230d565b5f6101e08284031215612853575f80fd5b61285b612772565b61286584846127a8565b8152612873602084016127f4565b6020820152612884604084016127f4565b6040820152612895606084016127f4565b60608201526128a6608084016127f4565b60808201526128b760a084016127f4565b60a08201526128c860c08401612818565b60c08201526128d960e0840161282c565b60e08201526101006128ec818501612837565b908201526101206128fe848201612837565b90820152610140612910848201612837565b90820152610160612922848201612837565b908201526101806129348482016127f4565b908201526101a06129468482016127f4565b908201526101c06129588482016127f4565b908201529392505050565b5f60208284031215612973575f80fd5b5051919050565b5f6020828403121561298a575f80fd5b813561230681612715565b81516001600160a01b0316815260208083015161ffff16908201526040808301516101208301916129d0908401826001600160a01b03169052565b5060608301516129e4606084018215159052565b5060808301516129ff60808401826001600160a01b03169052565b5060a0830151612a1560a084018261ffff169052565b5060c0830151612a3060c08401826001600160a01b03169052565b5060e083015160e083015261010080840151818401525092915050565b81810381811115612a6c57634e487b7160e01b5f52601160045260245ffd5b92915050565b5f82518060208501845e5f92019182525091905056fea164736f6c6343000819000a8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0';

type WrappedTokenGatewayV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrappedTokenGatewayV3ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrappedTokenGatewayV3__factory extends ContractFactory {
  constructor(...args: WrappedTokenGatewayV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    weth: string,
    owner: string,
    pool: string,
    loop: string,
    overrides?: Overrides & { from?: string },
  ): Promise<WrappedTokenGatewayV3> {
    return super.deploy(
      weth,
      owner,
      pool,
      loop,
      overrides || {},
    ) as Promise<WrappedTokenGatewayV3>;
  }
  override getDeployTransaction(
    weth: string,
    owner: string,
    pool: string,
    loop: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(weth, owner, pool, loop, overrides || {});
  }
  override attach(address: string): WrappedTokenGatewayV3 {
    return super.attach(address) as WrappedTokenGatewayV3;
  }
  override connect(signer: Signer): WrappedTokenGatewayV3__factory {
    return super.connect(signer) as WrappedTokenGatewayV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrappedTokenGatewayV3Interface {
    return new utils.Interface(_abi) as WrappedTokenGatewayV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): WrappedTokenGatewayV3 {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as WrappedTokenGatewayV3;
  }
}
